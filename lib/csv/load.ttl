; load csv library
_filename = filename
filename = ''
sprintf2 _re_field '^,?\s*(?:%s|%s|([^,]*))?\s*' '"([^"]*)"' "'([^']*)'"

; initialization
filesearch _filename
if result == 0 then
  sprintf2 message 'Not found csv file: %s' _filename
  include 'lib\sys\log.ttl'
  result = 0
  exit
endif

strlen refname
if result == 0 then
  refname = 'csv'
elseif result > 20 then
  sprintf2 message 'refname is too long: %s' refname
  include 'lib\sys\log.ttl'
  result = 0
  exit
endif

; load csv file
fileopen fhandle _filename 0
if fhandle < 0 then
  sprintf2 message '%s can not open.' _filename
  include 'lib\sys\log.ttl'
  result = 0
  exit
endif

; read csv header
sprintf 'ifdefined csv_hdrs_%s' refname
execcmnd inputstr
if result == 0 then
  sprintf 'strdim csv_hdrs_%s csv_max_column+1' refname
  execcmnd inputstr
elseif result != 6 then
  sprintf2 message 'csv_hdrs_%s is not defined as a string array variable.' refname
  include 'lib\sys\log.ttl'
  result = 0
  exit
endif

filereadln fhandle _line
if result == 1 then
  message = 'csv file is empty.'
  include 'lib\sys\log.ttl'
  result = 0
  call _error
endif

strlen _line
if result == 0 then
  message = 'csv header row is undefined'
  include 'lib\sys\log.ttl'
  result = 0
  call _error
endif

call _csv_readline
if _len > csv_max_column then
  message = 'the number of csv headers exceeds the set value.'
  include 'lib\sys\log.ttl'
  result = 0
  call _error
endif

for _i 0 _len
  strmatch _csv_line_fields[_i] '[^a-zA-Z0-9_]'
  if result > 0 then
    sprintf2 message 'Error: Invalid header characters: %s' _csv_line_fields[_i]
    include 'lib\sys\log.ttl'
    result = 0
    call _error
  endif
  sprintf 'csv_hdrs_%s[_i] = _csv_line_fields[_i]' refname
  execcmnd inputstr
  sprintf 'strdim csv_rs_%s_%d %d' refname _i csv_max_rows
  execcmnd inputstr
  sprintf2 _csv_execcmnds[_i] 'csv_rs_%s_%d[csv_row_%s] = _csv_line_fields[_i]' refname _i refname
next

; read csv rows
_csv_column = _len
sprintf 'csv_col_%s = _len' refname
execcmnd inputstr

sprintf 'csv_row_%s = -1' refname
execcmnd inputstr
sprintf 'csv_row_%s = csv_row_%s + 1' refname refname
_execcmnds[0] = inputstr

while 1
  filereadln fhandle _line
  if result == 1 break
  call _csv_readline
  execcmnd _execcmnds[0]
  for _i 0 _csv_column
    execcmnd _csv_execcmnds[_i]
  next
loop

; exit loading csv
fileclose fhandle
exit

:_csv_readline
_len = 0
for _i 0 csv_max_column
  _s_value = ''

  strreplace _line 1 _re_field ''
  if result > 0 then
    strlen groupmatchstr1
    if result > 0 _s_value = groupmatchstr1

    strlen groupmatchstr2
    if result > 0 _s_value = groupmatchstr2

    strlen groupmatchstr3
    if result > 0 _s_value = groupmatchstr3
  endif
  strlen _s_value
  if result == 0 && _len == 0 _len = _i - 1
  _csv_line_fields[_i] = _s_value
next
return

:_error
result = 0
fileclose fhandle
exit